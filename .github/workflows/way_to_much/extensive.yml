      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type checking
        run: pnpm type-check

      - name: Linting
        run: pnpm lint

      - name: Format checking
        run: pnpm format:check

  # Job 2: API Tests
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ha_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_test
      SHADOW_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_shadow_test
      NODE_ENV: test
      JWT_SECRET: test-secret-key-that-is-at-least-32-characters-long-for-github-actions
      API_PREFIX: /api/v1
      CORS_ORIGIN: http://localhost:3000
      PORT: 3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test database
        run: |
          pnpm --filter database db:push
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_test

      - name: Run database migrations
        run: |
          pnpm --filter database db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_test

      - name: Seed test database
        run: |
          pnpm --filter database db:seed
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_test

      - name: Run unit tests
        run: pnpm --filter api test:unit

      - name: Run integration tests
        run: pnpm --filter api test:integration

      - name: Generate test coverage
        run: pnpm --filter api test:coverage

      - name: Upload coverage to Codecov
        if: github.event_name == 'pull_request'
        uses: codecov/codecov-action@v3
        with:
          file: ./apps/api/coverage/lcov.info
          flags: api
          name: api-coverage
          fail_ci_if_error: false

  # Job 3: Web App Tests
  web-tests:
    name: Web App Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web app
        run: pnpm --filter web build

      - name: Run web tests
        run: pnpm --filter web test

  # Job 4: Database Tests
  database-tests:
    name: Database Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ha_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_test
      SHADOW_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_shadow_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test database migrations
        run: |
          pnpm --filter database db:push
          pnpm --filter database db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ha_management_test

      - name: Run database tests
        run: pnpm --filter database test

  # Job 5: Shared Package Tests
  shared-tests:
    name: Shared Package Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run shared package tests
        run: pnpm --filter shared test

  # Job 6: Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Security audit
        run: pnpm audit --audit-level moderate

  # Job 7: Build Verification
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [code-quality]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Verify build outputs
        run: |
          # Verify API build
          ls -la apps/api/dist/
          # Verify web build
          ls -la apps/web/.next/
    